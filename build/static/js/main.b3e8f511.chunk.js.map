{"version":3,"sources":["actions/items.js","reducers/index.js","reducers/items.js","store/configureStore.js","components/ItemDetail.jsx","components/ItemList.js","index.jsx"],"names":["itemsIsLoading","bool","type","isLoading","combineReducers","items","state","action","itemsHasErrored","hasErrored","initialState","ItemDetail","props","display","item","e","console","log","this","setState","onClick","onItemClickHandler","bind","Title","style","TeleworkerName","Name","for","id","name","value","Office","PositionTitle","Component","ItemList","fetchData","filter","map","connect","dispatch","url","axios","get","then","response","status","Error","statusText","data","d","results","itemsFetchDataSuccess","catch","error","itemsFetchData","store","createStore","rootReducer","applyMiddleware","thunk","App","ReactDom","render","document","getElementById"],"mappings":"2SASO,SAASA,EAAeC,GAC3B,MAAO,CACHC,KAAM,mBACNC,UAAWF,G,sCCTJG,kBAAgB,CAC3BC,MCgBG,WAAoC,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCACtC,OAAQA,EAAOL,MACX,IAAK,2BACD,OAAOK,EAAOF,MAElB,QACI,OAAOC,IDrBfE,gBCLG,WAAiD,IAAxBF,EAAuB,wDAARC,EAAQ,uCACnD,OAAQA,EAAOL,MACX,IAAK,oBACD,OAAOK,EAAOE,WAElB,QACI,OAAOH,IDAfN,eCIG,WAAgD,IAAxBM,EAAuB,wDAARC,EAAQ,uCAClD,OAAQA,EAAOL,MACX,IAAK,mBACD,OAAOK,EAAOJ,UAElB,QACI,OAAOG,M,ICZoBI,ECFjBC,E,YAElB,WAAYC,GACX,IAAD,8BACI,4CAAMA,KACDN,MAAQ,CAAEO,QAAU,QAF7B,E,gFAKmBC,EAAMC,GACrBC,QAAQC,IAAI,QACZD,QAAQC,IAAIH,GACe,SAAvBI,KAAKZ,MAAMO,QACfK,KAAKC,SAAS,CAAEN,QAAU,UAE1BK,KAAKC,SAAS,CAAEN,QAAU,W,+BAQ1B,OACD,wBACSO,QAAWF,KAAKG,mBAAmBC,KAAKJ,KAAKA,KAAKN,MAAME,OAC/DI,KAAKN,MAAME,KAAKS,MACjB,yBAAKC,MAAUN,KAAKZ,OAEjB,6BAAK,sCAAYY,KAAKN,MAAME,KAAKW,eAAeC,OAI/C,2BAAOC,IAAI,SAAX,WACA,2BAAOzB,KAAK,OAAO0B,GAAG,QAAQC,KAAK,QAAQC,MAAOZ,KAAKN,MAAME,KAAKiB,SAElE,2BAAOJ,IAAI,SAAX,oBACA,2BAAOzB,KAAK,OAAO0B,GAAG,QAAQC,KAAK,QAAQC,MAAOZ,KAAKN,MAAME,KAAKkB,gBAIlE,qD,GAxC6BC,aCInCC,E,4LAGEhB,KAAKN,MAAMuB,UAAU,wJ,+BAIrB,OAAIjB,KAAKN,MAAMH,WACJ,0EAGPS,KAAKN,MAAMT,UACJ,4CAIP,4BACKe,KAAKN,MAAMP,MAAM+B,QAAO,SAAA/B,GAAK,OAAkB,MAAdA,EAAM0B,QAA+B,0BAAf1B,EAAMkB,SAAmCc,KAAI,SAACvB,GAAD,OACjG,kBAAC,EAAD,CAAYA,KAAMA,Y,GAlBfmB,aA8CRK,eAdS,SAAChC,GACrB,MAAO,CACHD,MAAOC,EAAMD,MACbI,WAAYH,EAAME,gBAClBL,UAAWG,EAAMN,mBAIE,SAACuC,GACxB,MAAO,CACHJ,UAAW,SAACK,GAAD,OAASD,ELzBrB,SAAwBC,GAC3B,OAAO,SAACD,GACJA,EAASvC,GAAe,IACvBgB,QAAQC,IAAI,qBAAuBuB,GAGpCC,IAAMC,IAAIF,GACTG,MAAO,SAACC,GACL,GAAwB,MAAnBA,EAASC,OACV,MAAMC,MAAMF,EAASG,YAIzB,OAFAR,EAASvC,GAAe,IAEjB4C,KAEVD,MAAK,SAACC,GAAD,OAAcA,EAASI,KAAKC,EAAEC,WACnCP,MAAK,SAACtC,GAAD,OAAWkC,EAvBlB,SAA+BlC,GAClC,MAAO,CACHH,KAAM,2BACNG,SAoB0B8C,CAAsB9C,OAC/C+C,OAAO,SAASC,GACbrC,QAAQC,IAAIoC,OKOaC,CAAed,QAIrCF,CAA6CJ,GCjCtDqB,G,OHdFvC,QAAQC,IAAI,8BACZD,QAAQC,IAAIP,GACL8C,YACHC,EACA/C,EACAgD,YAAgBC,OGYlBC,E,iLAQJ,OACM,kBAAC,IAAD,CAAUL,MAAOA,GACb,6BAAK,+CAEL,kBAAC,EAAD,Y,GAZMtB,aAuBlB4B,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.b3e8f511.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport function itemsHasErrored(bool) {\r\n    return {\r\n        type: 'ITEMS_HAS_ERRORED',\r\n        hasErrored: bool\r\n    };\r\n}\r\n\r\nexport function itemsIsLoading(bool) {\r\n    return {\r\n        type: 'ITEMS_IS_LOADING',\r\n        isLoading: bool\r\n    };\r\n}\r\n\r\nexport function itemsFetchDataSuccess(items) {\r\n    return {\r\n        type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n        items\r\n    };\r\n}\r\n\r\nexport function itemsFetchData(url) {\r\n    return (dispatch) => {\r\n        dispatch(itemsIsLoading(true));\r\n         console.log(\"called item fetch:\" + url)\r\n\r\n        // axios.get('http://sharepoint.fda.gov/orgs/CDER-OMDMSSvc/TeleworkMgmt/_vti_bin/ListData.svc/TeleworkMaster')\r\n        axios.get(url)\r\n        .then(  (response) => {\r\n            if (!response.status == 200) {\r\n                throw Error(response.statusText);\r\n            }\r\n            dispatch(itemsIsLoading(false));\r\n\r\n            return response;\r\n        })\r\n        .then((response) => response.data.d.results)\r\n        .then((items) => dispatch(itemsFetchDataSuccess(items)))\r\n        .catch (function(error){\r\n            console.log(error);\r\n        })\r\n\r\n\r\n    };\r\n}","import { combineReducers } from 'redux';\r\nimport { items, itemsHasErrored, itemsIsLoading } from './items';\r\n\r\nexport default combineReducers({\r\n    items,\r\n    itemsHasErrored,\r\n    itemsIsLoading\r\n});","export function itemsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function itemsIsLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_IS_LOADING':\r\n            return action.isLoading;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function items(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ITEMS_FETCH_DATA_SUCCESS':\r\n            return action.items;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n    console.log(\"configure store was called\")\r\n    console.log(initialState)\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(thunk)\r\n    );\r\n}","import React, {Component} from 'react'; \r\n\r\n export default class ItemDetail extends Component { \r\n \r\n    constructor(props) \r\n    { \r\n        super(props);  \r\n        this.state = { display : 'none' }; \r\n    }\r\n\r\n    onItemClickHandler(item, e){\r\n        console.log(\"test\");\r\n        console.log(item)\r\n        if (this.state.display === 'none') \r\n        this.setState({ display : 'block' }); \r\n    else\r\n        this.setState({ display : 'none' }); \r\n\r\n        \r\n      }\r\n\r\n\r\n    render() \r\n    { \r\n        return(\r\n       <li \r\n                onClick = {this.onItemClickHandler.bind(this,this.props.item)} >\r\n        {this.props.item.Title}\r\n        <div style = { this.state } >\r\n           \r\n           <div><h1>Name:  {this.props.item.TeleworkerName.Name}</h1></div>\r\n                                       \r\n           \r\n\r\n            <label for=\"fname\">Office:</label>\r\n            <input type=\"text\" id=\"fname\" name=\"fname\" value={this.props.item.Office} />\r\n            \r\n            <label for=\"lname\">Position Ttile: </label>\r\n            <input type=\"text\" id=\"lname\" name=\"lname\" value={this.props.item.PositionTitle} />\r\n           \r\n           \r\n           \r\n            <button>Update Item</button>\r\n            \r\n        </div>\r\n        </li> \r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport ItemDetail from './ItemDetail'\r\nimport { itemsFetchData } from '../actions/items';\r\n\r\nclass ItemList extends Component {\r\n    componentDidMount() {\r\n        //this.props.fetchData('http://599167402df2f40011e4929a.mockapi.io/items');\r\n        this.props.fetchData('http://sharepoint.fda.gov/orgs/CDER-OMDMSSvc/TeleworkMgmt/_vti_bin/ListData.svc/TeleworkMaster?$expand=TeleworkerName&?$filter=SuperOffice eq null')\r\n    }\r\n\r\n    render() {\r\n        if (this.props.hasErrored) {\r\n            return <p>Sorry! There was an error loading the items</p>;\r\n        }\r\n\r\n        if (this.props.isLoading) {\r\n            return <p>Loadingâ€¦</p>;\r\n        }\r\n\r\n        return (\r\n            <ul>\r\n                {this.props.items.filter(items => items.Office==null && items.Title != 'Historical Data Upload').map((item) => (\r\n                    <ItemDetail item={item}></ItemDetail>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nItemList.propTypes = {\r\n    fetchData: propTypes.func.isRequired,\r\n    items: propTypes.array.isRequired,\r\n    hasErrored: propTypes.bool.isRequired,\r\n    isLoading: propTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        hasErrored: state.itemsHasErrored,\r\n        isLoading: state.itemsIsLoading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url) => dispatch(itemsFetchData(url))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList);","import 'react-app-polyfill/ie11';\r\nimport \"react-app-polyfill/stable\";\r\nimport propTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { itemsFetchData } from './actions/items'\r\nimport axios from 'axios';\r\nimport ReactDom from \"react-dom\"\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\n\r\n\r\nimport ItemList from './components/ItemList';\r\nimport './style.css'; \r\n\r\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\r\nconst DEFAULT_QUERY = 'redux';\r\nconst url = API + DEFAULT_QUERY;\r\n\r\nconst store = configureStore();\r\n\r\n\r\nclass App extends Component { \r\n\r\n    \r\n\r\n    \r\n\r\n    render() {\r\n     \r\n  return(\r\n        <Provider store={store}>\r\n            <div><h2>Telework Update</h2>\r\n\r\n            <ItemList />  \r\n       \r\n\r\n        \r\n\r\n        </div></Provider>\r\n  )\r\n    }\r\n    \r\n} \r\n\r\nReactDom.render(<App/>, document.getElementById(\"root\"))\r\n\r\n\r\n\r\n"],"sourceRoot":""}